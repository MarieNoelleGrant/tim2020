/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */@import url("https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap");html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@font-face{font-family:"Vremena Grotesk";src:url("../fontes/VremenaGrotesk/vremenagrotesk.otf") format("opentype"),url("../fontes/VremenaGrotesk/vremenagrotesk-webfont.ttf") format("truetype"),url("../fontes/VremenaGrotesk/vremenagrotesk-webfont.woff") format("woff"),url("../fontes/VremenaGrotesk/vremenagrotesk-webfont.woff2") format("woff2");font-display:swap}@font-face{font-family:"Vremena Grotesk Medium";src:url("../fontes/VremenaGrotesk/vremenagroteskmedium.otf") format("opentype"),url("../fontes/VremenaGrotesk/vremenagroteskmedium-webfont.ttf") format("truetype"),url("../fontes/VremenaGrotesk/vremenagroteskmedium-webfont.woff") format("woff"),url("../fontes/VremenaGrotesk/vremenagroteskmedium-webfont.woff2") format("woff2");font-display:swap}@font-face{font-family:"Vremena Grotesk Book";src:url("../fontes/VremenaGrotesk/vremenagroteskbook.otf") format("opentype"),url("../fontes/VremenaGrotesk/vremenagroteskbook-webfont.ttf") format("truetype"),url("../fontes/VremenaGrotesk/vremenagroteskbook-webfont.woff") format("woff"),url("../fontes/VremenaGrotesk/vremenagroteskbook-webfont.woff2") format("woff2");font-display:swap}.clearfix:after{content:" ";display:table;clear:both}.visuallyhidden,.screen-reader-only{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.visuallyhidden.focusable:active,.visuallyhidden.focusable:focus,.screen-reader-only.focusable:active,.screen-reader-only.focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}@media (max-width: 840px){body,main{max-width:100vw;overflow-x:hidden}}html{overflow-x:hidden}main{padding-top:50px}@media (min-width: 840px){main{padding-top:120px}}*:focus{outline-color:#fff}a{text-decoration:none;color:#000}img{max-width:100%;vertical-align:bottom}ul{list-style:none;margin-left:0;padding-left:0}#contenu{position:relative}.displayNone{display:none}@media (min-width: 600px){body main .mobileOnly{display:none}}@media (min-width: 840px){body main .tabletteOnly{display:none}}@media (max-width: 840px){body main .tableOnly{display:none}}.accroche{border:solid #000 2px;padding:5px 15px;background-color:#fff}.accroche__titre{margin-bottom:8px}.accroche__texte{margin-top:5px}@media (min-width: 840px){.accroche{width:100%;margin-top:20px;display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center;padding:10px 24px}.accroche__titre{font-size:24px;font-size:2.4rem;margin:0}.accroche__texte,.accroche a{font-size:20px;font-size:2rem}.accroche__texte{margin:0}}.noScript__conteneur{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;display:block;margin:10px auto;padding:20px;border:5px solid #1E1E1E}@media (max-width: 840px){.noScript .icone{width:100%}.noScript__conteneur{text-align:center}}html{font-size:62.5%}body{font-size:16px;font-size:1.6rem;font-family:"Roboto",Arial,sans-serif;line-height:1.5;font-weight:300}@media (min-width: 600px){body{line-height:1.5}}h1,.h1,h2,.h2,h3,.h3,p{color:#1E1E1E}h1,.h1,h2,.h2,.h3--Deco{font-family:"Vremena Grotesk Medium",Arial,sans-serif}h3,.h3{font-family:"Roboto",Arial,sans-serif}h1,.h1{font-size:41px;font-size:4.1rem;text-transform:uppercase}@media (min-width: 600px){h1,.h1{font-size:55px;font-size:5.5rem}}@media (min-width: 840px){h1,.h1{font-size:81px;font-size:8.1rem}}@media (max-width: 390px){h1,.h1{font-size:37px;font-size:3.7rem}}h2,.h2{font-size:31px;font-size:3.1rem;text-transform:uppercase}@media (min-width: 600px){h2,.h2{font-size:38px;font-size:3.8rem}}@media (min-width: 840px){h2,.h2{font-size:51px;font-size:5.1rem}}@media (max-width: 390px){h2,.h2{font-size:25px;font-size:2.5rem}}h3,.h3{font-size:21px;font-size:2.1rem;font-weight:800}@media (min-width: 600px){h3,.h3{font-size:25px;font-size:2.5rem}}@media (max-width: 390px){h3,.h3{font-size:19px;font-size:1.9rem}}.h3--deco{font-family:"Vremena Grotesk Medium",Arial,sans-serif;font-size:21px;font-size:2.1rem;text-transform:uppercase}.h3--decoBlanc{color:#fff}@media (min-width: 600px){.h3--deco{font-size:25px;font-size:2.5rem}}@media (max-width: 390px){.h3--deco{font-size:19px;font-size:1.9rem}}h4,.h4{font-family:"Roboto",Arial,sans-serif;font-weight:500;font-size:19px;font-size:1.9rem}.h1--blanc,.h2--blanc,.h3--blanc{color:#fff}.icone{width:24px;height:24px;display:inline-block}.icone__lienExterne,.icone__lienExterne--noir{margin-left:8px;width:20px;height:20px}.icone__lienExterne{background:url("../images/icone_lienExterne.svg") no-repeat center center/contain}.icone__lienExterne--noir{background:url("../images/icone_lienExterne--noir.svg") no-repeat center center/contain}.icone__rafraichir{background:url("../images/icone_refresh.svg") no-repeat center center/contain;margin-right:8px}.icone__chevron{background:url("../images/icone_chevron.svg") no-repeat center center/contain;transition:transform 0.5s ease-in-out}.icone__chevron--blanc{background:url("../images/icone_chevron--blanc.svg") no-repeat center center/contain;transition:transform 0.5s ease-in-out}.icone__chevron--gauche{transform:rotate(90deg)}.icone__chevron--droite{transform:rotate(-90deg)}.icone__chevron--haut{transform:rotate(180deg)}.icone__random{background:url("../images/icone_aleatoire.svg") no-repeat center center/contain;margin-right:8px}@media (min-width: 840px){.icone__random{width:50px;height:50px}}.icone__filtre{background:url("../images/icone_filtre.svg") no-repeat center center/contain;margin-right:8px;width:38px;height:38px}@media (min-width: 840px){.icone__filtre{width:50px;height:50px}}.icone__twitter{background:url("../images/icone_twitter.svg") no-repeat center center/contain;margin-right:6px}@media (min-width: 840px){.icone__twitter{margin-right:10px}}.icone__twitter--fonce{background:url("../images/icone_twitter--fonce.svg") no-repeat center center/contain;margin-left:8px}.icone__facebook{background:url("../images/icone_facebook.svg") no-repeat center center/contain;margin-left:8px}.icone__facebook--blanc{background:url("../images/icone_facebook--blanc.svg") no-repeat center center/contain}.icone__flecheVisionneuse{background:url("../images/icone_fleche_visionneuse.svg") no-repeat center center/contain;width:150px;height:50px}.icone__menu{background:url("../images/icone_menu--ouvert.svg") no-repeat center center/contain;width:38px;height:38px}.icone__menu--fermer{background:url("../images/icone_menu--fermer.svg") no-repeat center center/contain;width:38px;height:38px}.icone__courriel{background:url("../images/icone_courriel.svg") no-repeat center center/contain;margin-right:6px}@media (min-width: 840px){.icone__courriel{margin-right:10px}}.icone__portfolio{background:url("../images/icone_portfolio.svg") no-repeat center center/contain;margin-right:6px}@media (min-width: 840px){.icone__portfolio{margin-right:10px}}.icone__linkedin{background:url("../images/icone_linkedin.svg") no-repeat center center/contain;margin-right:6px}@media (min-width: 840px){.icone__linkedin{margin-right:10px}}.icone__erreur{background:url("../images/icone_erreur.svg") no-repeat center center/contain;margin-right:6px}.icone__crochet{background:url("../images/icone_crochet.svg") no-repeat center center/contain;margin-right:6px}.icone__video--play{background:url("../images/icone_play.svg") no-repeat center center/contain}@media (min-width: 840px){.icone__video--play{width:38px;height:38px}}.icone__video--pause{background:url("../images/icone_pause.svg") no-repeat center center/contain;width:20px;height:20px}@media (min-width: 840px){.icone__video--pause{width:33px;height:30px;margin-right:2px}}button:focus,.bouton:focus{outline:none}.bouton{display:inline-flex;flex-flow:row nowrap;align-items:baseline;min-width:150px}@media (min-width: 840px){.bouton{min-width:255px}}.bouton__primaire,.bouton__secondaire{font-family:"Vremena Grotesk Medium", Arial, sans-serif;padding:20px 30px;font-size:16px;font-size:1.6rem}@media (min-width: 840px){.bouton__primaire,.bouton__secondaire{font-size:18px;font-size:1.8rem;padding:20px 50px}}.bouton__primaire span,.bouton__secondaire span{line-height:24px}.bouton__primaire{color:#fff;background-color:#1E1E1E;transition:all ease-in-out 0.4s;box-shadow:0 4px 10px rgba(30,30,30,0.25);justify-content:center}.bouton__primaire:before{content:" ";width:calc(100% + 20px);height:110%;background:url(../images/motif_pois.svg) repeat top left;background-size:88%;background-attachment:scroll;position:absolute;top:25%;left:20px;z-index:-1;transition:all ease-in-out 0.4s;opacity:1}@media (max-width: 840px){.bouton__primaire:before{background-size:initial}}.bouton__primaire:hover,.bouton__primaire:focus{transform:translate(10px, 12%)}.bouton__primaire:hover:before,.bouton__primaire:focus:before{transform:translate(-10px, -12%);width:100%;height:100%;opacity:0}.bouton__secondaire{border:solid 4px #1E1E1E}.bouton__form{padding:10px 20px;display:flex;flex-flow:row nowrap;justify-content:center;align-items:center}@media (min-width: 840px){.bouton__form:before{top:30%}}@media (max-width: 840px){.bouton__form:before{background-size:140%;left:10px}}.bouton--blanc{background-color:#fff;color:#000}.bouton--blanc:before{background-image:url("../images/motif_pois--blanc.svg")}.conteneur__bouton{position:relative;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;margin:10px 0 30px;z-index:1}@media (min-width: 840px){.conteneur__bouton{margin-bottom:0}}.lien{font-size:16px;font-size:1.6rem;font-weight:500;border-bottom:solid 10px rgba(30,30,30,0.6);display:inline-block;transition:transform ease-in-out 0.2s}@media (min-width: 600px){.lien{font-size:18px;font-size:1.8rem}}.lien:hover,.lien:focus{transform:translateY(-10px)}.lien__realisation{transition:transform ease-in-out 0.2s}.lien__realisation:hover,.lien__realisation:focus{transform:translateX(10px)}.conteneur__lien{position:relative;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;margin-bottom:10px;display:inline-block}.form{border:solid 9px #1E1E1E;padding:18px}@media (min-width: 600px){.form{margin-top:20px}}.form__text--xl{height:115px;padding:6px 10px}@media (min-width: 840px){.form__text--s{width:220px}.form__text--m{width:300px}.form__text--l,.form__text--xl{width:385px}}.form label{font-size:18px;font-size:1.8rem}.form input:not([type="checkbox"]){padding:4px 10px}.form select{width:200px;height:36px;font-weight:300}.form textarea{border:solid 1px #1E1E1E}.conteneur__form{display:flex;flex-flow:column nowrap;margin-bottom:16px;position:relative;width:calc(100% - 40px)}@media (min-width: 840px){.conteneur__form{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}}.conteneur__form--pasFlex{display:inline-block}.conteneur__form.conteneur__select{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.conteneur__form .icone__crochet{right:-32px}.msgErreur{margin-bottom:0;color:#EE302C;display:flex;align-items:center;margin-top:7px}.erreur{border:1px solid #EE302C}.icone__crochet{position:absolute;top:28px;right:-40px}.msgEnvoiCourriel{display:flex;padding:10px;font-weight:500;color:#EE302C;border:3px solid #EE302C}.msgEnvoiCourriel .icone{position:initial}.msgEnvoiCourriel--ok{color:#000;border-color:rgba(29,233,182,0.8)}.gds{margin-bottom:50px}.gds__titre{border-bottom:3px solid #383838;text-align:left;padding-bottom:5px}.gds__sousTitre{border-bottom:1px solid #383838;text-align:left;padding-bottom:5px;padding-top:40px}.gds__description{font-size:18px;font-size:1.8rem;text-transform:lowercase;font-family:Roboto, Arial, sans-serif;font-weight:300}.gds__palette{display:flex;flex-wrap:wrap;justify-content:flex-start;list-style-type:none;padding:0}.gds__paletteItem{margin:5px 0;width:32.20339%}.gds__paletteCouleur{border:1px solid gray;width:50px;height:50px;margin-bottom:10px}.gds__paletteCouleur--blanc{background-color:#fff}.gds__paletteCouleur--noir{background-color:#000}.gds__paletteCouleur--presqueNoir{background-color:#1E1E1E}.gds__paletteCouleur--vertMenthe{background-color:#1DE9B6}.gds__paletteCouleur--jauneFlash{background-color:#FFEA00}.gds__paletteCouleur--mauveLilas{background-color:#647BFE}.gds__paletteCouleur--jauneOcre{background-color:#FEB13D}.gds__style{width:100px;height:100px}.gds__flex{display:flex;flex-wrap:wrap;justify-content:flex-start}.gds__item{margin-right:5.26316%}@media (min-width: 1200px){.gds__item{margin-right:1.26582%}}.gds__bgNoir{background-color:#1E1E1E;padding:10px}.gds__space{align-items:center}.gds__space span.gds__description{margin-left:60px}h1,h2,h3,.h1,.h2,.h3{margin-bottom:0;margin-top:20px}html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}.conteneur{margin:0 auto;max-width:1000px}@media (max-width: 840px){.conteneur{margin:0 10px}}.header__conteneur{background-color:rgba(30,30,30,0.9);padding:0 10px}@media (min-width: 840px){.header__conteneur{padding:0 60px;display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center}}@media (max-width: 840px){.header__logo{display:inline-block;transform:scale(0.72);transform-origin:top left;transition:transform 0.3s ease-in-out}.header__logo--zoom{transform:scale(1);transition:transform 0.3s ease-in-out}}@media (min-width: 840px){.menu{display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center}}.menu-principal-container{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}@media (max-width: 840px){.menu-item{width:100%;padding:0 0 0 13px;display:inline-block;margin:0 0 10px 0;background-color:white}}@media (min-width: 840px){.menu-item{text-align:center;padding:5px 20px}}.menu-item a{transition:0.5s;text-transform:uppercase;font-size:18px;font-size:1.8rem;font-family:"Vremena Grotesk", Arial, sans-serif}@media (max-width: 840px){.menu-item a{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;padding:6px 16px;margin:6px;display:inline-block}}@media (min-width: 840px){.menu-item a{width:100%;color:#fff;padding:5px 10px}}.menu-item a:focus{outline:none;box-shadow:inset 9em 0 0 0 #1E1E1E;color:#fff}@media (min-width: 840px){.menu-item a:focus{box-shadow:inset 9em 0 0 0 #fff;color:#1E1E1E}}.menu-item:focus{outline:none}.menu-item:hover a,.menu-item:active a,.menu-item.current-menu-item a{box-shadow:inset 9em 0 0 0 #1E1E1E;color:#fff}@media (min-width: 840px){.menu-item:hover a,.menu-item:active a,.menu-item.current-menu-item a{box-shadow:inset 9em 0 0 0 #fff;color:#1E1E1E}}.js .header{position:fixed;height:initial;width:100%;z-index:7;transition:top ease-in-out 0.3s;top:0}.js .header--cache{top:-100px}.js .nav{overflow:hidden}.js .menu__btnMenu{display:none}@media (max-width: 840px){.js .menu{opacity:1;height:260px;transition:height 0.5s ease-in-out, opacity 0.5s ease-in-out;margin-left:-10px}.js .menu--ferme{height:0;opacity:0;overflow:hidden;margin:0}.js .menu__btnMenu{display:initial;background-color:transparent;border:none;position:absolute;top:10px;right:0}.js .menu-principal-container{width:initial}}.footer{background-color:rgba(30,30,30,0.8);padding-top:60px}@media (min-width: 840px){.footer{padding-top:100px}}@media (min-width: 840px){.footer__feedSociaux{display:flex;flex-flow:row wrap;justify-content:space-between}}.footer .feed .h2{width:100%;margin:0}.footer .feed__entete{background-color:#1E1E1E;display:flex;flex-flow:row nowrap;margin:0;padding-top:10px}.footer .feed__entete .icone{width:32px;height:32px}.footer .feed__facebook,.footer .feed__twitter{border:solid 9px #1E1E1E;box-shadow:4px 4px 6px rgba(30,30,30,0.25);margin-bottom:20px}@media (min-width: 840px){.footer .feed__facebook,.footer .feed__twitter{width:49.15254%;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}}.footer .feed__facebook .ctf,.footer .feed__facebook #cff,.footer .feed__twitter .ctf,.footer .feed__twitter #cff{background-color:#fff}.footer .feed__twitter #ctf .ctf-item{padding:15px}.footer__conteneur{background-color:#1E1E1E;color:#fff;padding:0 0 20px}.footer__flex{display:flex;flex-flow:column nowrap;justify-content:center}@media (min-width: 840px){.footer__flex{flex-flow:row nowrap;justify-content:space-between}}.footer__logoSociaux{display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center}@media (min-width: 840px){.footer__logoSociaux{width:66.10169%}}.footer__lienTIM{width:73.68421%}@media (min-width: 600px){.footer__lienTIM{width:49.15254%}}@media (min-width: 840px){.footer__lienTIM{width:48.71795%}}.footer__sociaux{margin:0 0 15px 30px}@media (max-width: 600px){.footer__sociaux{margin-right:-10px}}.footer__sociaux .conteneur__bouton{margin-bottom:22px}.footer__sociaux .conteneur__bouton:last-of-type{margin-bottom:0}.footer__sociaux .bouton{font-size:16px;font-size:1.6rem;font-family:Roboto, Arial, sans-serif;font-weight:400;padding:8px;display:flex;align-items:center;min-width:initial}@media (max-width: 600px){.footer__sociaux .bouton .facebook__texte,.footer__sociaux .bouton .twitter__texte{display:none}}.footer__sociaux .bouton .icone{margin-left:0;margin-right:10px}.footer .twitter .bouton__primaire:before{background-size:188%}.footer__logoCegep{margin:45px auto 0;display:block}@media (min-width: 840px){.footer__logoCegep{margin-right:3.38983%;display:initial}}.footer__credits{color:#fff;margin-bottom:0;text-align:center;width:100%;font-family:Roboto, Arial, sans-serif;font-weight:300}.footer.footer__court{padding-top:0}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
